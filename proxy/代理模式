#### 代理模式
定义： 
由于某些原因需要给某对象提供一个代理以控制对该对象的访问，这时 访问对象不适合或者不能直接引用目标对象。代理对象作为访问对象和目标对象之间的中介
#### 优缺点
代理模式在客户端与目标对象之间起到一个中介作用和保护目标对象的作用；  
代理对象可以扩展目标对象的功能 
代理模式能将客户端与目标对象分离，在一定程度上降低了系统的耦合度    
#### 结构
1. 抽象主题类： 通过接口或抽象类声明真实主题和代理对象的业务方法
2. 真实主题类： 实现了抽象主题中的具体业务，是代理对象所代表的真是对象，是最终要引用的对象；
3. 代理类： 提供了与真是主题相同的接口，其内部含有对真实主题的引用，它可以访问、控制或扩展真实主题的功能
#### 动态代理
1. JDK代理使用的是反射机制实现aop的动态代理，CGLIB代理使用字节码处理框架asm，通过修改字节码生成子类。 
所以jdk动态代理的方式创建代理对象效率较高，执行效率较低，cglib创建效率较低，执行效率高；
2.JDK动态代理机制是委托机制，具体说动态实现接口类，在动态生成的实现类里面委托hanlder去调用原始实现类方法， 
CGLIB则使用的继承机制，具体说被代理类和代理类是继承关系，所以代理类是可以赋值给被代理类的，如果被代理类有接口，那么代理类也可以赋值给接口。