#### 原型模式
定义：用一个已经创建的实例作为原型，通过复制该原型对象来创建一个和原型相同或相似的新对象
在这里，原型实例指定了要创建的对象的种类。用这种创建对象非常高效，根本无需知道创建的细节
##### 模式的结构
1. 抽象原型类： 规定了具体原型对象必须要实现的接口
2. 具体原型类： 实现抽象原型类的clone()方法，它是可被复制的对象
3. 访问类：使用具体原型类中的clone()方法来复制新的对象
##### 注意事项
构造函数不会被执行
浅拷贝的时候基本数据类型拷贝的是值（包括String类型），数组和引用数据类型（对象）是将指针拷贝过来；
使用原型模式时，引用的成员变量必须满足两个条件才会被拷贝：   
一是类的成员变量，而不是方法内变量   
二是必须是一个可变的引用对象，而不是一个原始类型或不可变对象
#### clone和final两个是对立的
你要实现深拷贝的梦想在final关键字的威胁下破灭了,路总是有的,我们来想想怎么修改这个方法:删除掉final关键字,这是最便捷、安全、快速的方式
你要使用clone方法,在类的成员变量上就不要增加final关键字。